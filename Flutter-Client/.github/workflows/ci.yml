name: Manual CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - debug
        - release
      platforms:
        description: 'Platforms to build (comma-separated)'
        required: true
        default: 'android,ios,linux,windows,macos,web'
        type: string
      run_tests:
        description: 'Run test suites'
        required: true
        default: true
        type: boolean
      generate_coverage:
        description: 'Generate coverage reports'
        required: true
        default: true
        type: boolean
      run_analysis:
        description: 'Run code analysis'
        required: true
        default: true
        type: boolean

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: inputs.run_tests == true
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

       - name: Run unit tests
         run: flutter test test/unit ${{ inputs.generate_coverage == true && '--coverage' || '' }}

       - name: Run widget tests
         run: flutter test test/widget

       - name: Run integration tests
         run: flutter test test/integration

       - name: Upload coverage to Codecov
         if: inputs.generate_coverage == true
         uses: codecov/codecov-action@v3
         with:
           file: coverage/lcov.info
           flags: unittests
           name: codecov-flutter

       - name: Generate coverage report
         if: matrix.os == 'ubuntu-latest' && inputs.generate_coverage == true
         run: |
           sudo apt-get install -y lcov
           genhtml coverage/lcov.info -o coverage/html

       - name: Upload coverage HTML
         if: matrix.os == 'ubuntu-latest' && inputs.generate_coverage == true
         uses: actions/upload-artifact@v3
         with:
           name: coverage-report
           path: coverage/html

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test
    if: contains(inputs.platforms, 'android')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Get dependencies
        run: flutter pub get

       - name: Build APK
         run: flutter build apk --${{ inputs.build_type }}

       - name: Build App Bundle
         run: flutter build appbundle --${{ inputs.build_type }}

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload App Bundle
        uses: actions/upload-artifact@v3
        with:
          name: android-bundle
          path: build/app/outputs/bundle/release/app-release.aab

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: test
    if: contains(inputs.platforms, 'ios')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build iOS (no codesign)
        run: flutter build ios --release --no-codesign

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: test
    if: contains(inputs.platforms, 'linux')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev

      - name: Get dependencies
        run: flutter pub get

      - name: Build Linux
        run: flutter build linux --release

      - name: Upload Linux build
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: build/linux/x64/release/bundle/

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: test
    if: contains(inputs.platforms, 'windows')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Upload Windows build
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: build/windows/runner/Release/

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    needs: test
    if: contains(inputs.platforms, 'macos')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build macOS
        run: flutter build macos --release

       - name: Upload macOS build
         uses: actions/upload-artifact@v3
         with:
           name: macos-build
           path: build/macos/Build/Products/Release/

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: test
    if: contains(inputs.platforms, 'web')

    steps:
       - name: Checkout code
         uses: actions/checkout@v4

       - name: Setup Flutter
         uses: subosito/flutter-action@v2
         with:
           flutter-version: '3.24.0'
           channel: 'stable'

       - name: Get dependencies
         run: flutter pub get

       - name: Build Web
         run: flutter build web --${{ inputs.build_type }}

       - name: Upload Web build
         uses: actions/upload-artifact@v3
         with:
           name: web-build
           path: build/web
